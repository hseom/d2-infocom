%!PS-Adobe-2.0
%%Title: cost_hit_alpha_1m.ps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Thu Mar  6 09:37:54 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cost_hit_alpha_1m.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (twchoi,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar  6 09:37:54 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
( 0) Rshow
1.000 UL
LTb
714 840 M
63 0 V
6185 0 R
-63 0 V
630 840 M
( 0.1) Rshow
1.000 UL
LTb
714 1260 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.2) Rshow
1.000 UL
LTb
714 1680 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.3) Rshow
1.000 UL
LTb
714 2100 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.4) Rshow
1.000 UL
LTb
714 2520 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.5) Rshow
1.000 UL
LTb
714 2940 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.6) Rshow
1.000 UL
LTb
714 3360 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.7) Rshow
1.000 UL
LTb
714 3780 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.8) Rshow
1.000 UL
LTb
714 4200 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.9) Rshow
1.000 UL
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 1) Rshow
1.000 UL
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
( 0) Cshow
1.000 UL
LTb
1964 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 500) Cshow
1.000 UL
LTb
3213 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1000) Cshow
1.000 UL
LTb
4463 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1500) Cshow
1.000 UL
LTb
5712 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2000) Cshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Hit Rate) Cshow
grestore
LTb
LCb setrgbcolor
3838 70 M
(Query Cost) Cshow
LTb
3838 4830 M
(Communication Cost vs. Hit rate\(1,000,000 nodes\)) Cshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
6311 4487 M
(w logN neighbors) Rshow
LT0
6395 4487 M
399 0 V
962 463 M
104 56 V
79 23 V
68 51 V
58 41 V
54 43 V
46 28 V
51 58 V
40 15 V
37 67 V
35 32 V
40 48 V
34 16 V
34 60 V
29 2 V
44 66 V
29 13 V
27 12 V
29 91 V
28 20 V
24 22 V
26 47 V
35 36 V
25 45 V
15 14 V
31 37 V
17 -2 V
22 55 V
34 35 V
24 39 V
13 70 V
26 5 V
22 -15 V
32 58 V
15 14 V
23 25 V
11 24 V
21 47 V
23 82 V
28 -36 V
10 -7 V
20 38 V
14 51 V
27 34 V
11 41 V
20 -11 V
19 58 V
17 34 V
26 16 V
16 46 V
6 39 V
30 -13 V
21 -9 V
19 45 V
16 28 V
11 53 V
8 -45 V
20 94 V
10 -39 V
23 67 V
16 30 V
15 -33 V
28 48 V
12 48 V
11 -3 V
20 52 V
1 -20 V
20 32 V
25 -19 V
12 41 V
23 5 V
15 41 V
2 55 V
22 -17 V
10 42 V
16 -3 V
11 49 V
9 1 V
26 25 V
7 16 V
18 31 V
2 -13 V
18 51 V
18 3 V
4 -2 V
15 14 V
17 39 V
15 46 V
7 -11 V
21 -32 V
15 71 V
10 -21 V
9 12 V
14 36 V
10 24 V
19 31 V
19 -35 V
10 23 V
17 31 V
23 35 V
1 14 V
11 36 V
17 -8 V
3274 3124 L
12 -26 V
-87 -29 V
91 88 V
-3 8 V
18 -15 V
25 19 V
15 12 V
8 6 V
-3 71 V
31 7 V
-1 -5 V
16 9 V
17 -15 V
-1 -27 V
13 33 V
18 83 V
13 -21 V
-1 -16 V
21 40 V
6 -36 V
13 63 V
14 26 V
9 -27 V
12 28 V
18 28 V
1 35 V
9 -89 V
20 38 V
6 50 V
16 -10 V
10 36 V
15 -32 V
1 49 V
5 -63 V
13 58 V
42 27 V
-32 10 V
31 0 V
10 8 V
-2 8 V
16 59 V
32 -16 V
-8 -16 V
3 22 V
4 20 V
20 21 V
-3 -45 V
23 34 V
10 0 V
-11 2 V
44 27 V
-10 -25 V
6 20 V
31 69 V
1 -78 V
14 -3 V
-8 69 V
14 -4 V
34 30 V
12 -30 V
-25 13 V
25 30 V
19 -8 V
12 48 V
0 27 V
3 -21 V
16 -1 V
6 -3 V
17 -6 V
-3 16 V
10 11 V
28 11 V
10 -12 V
-11 -2 V
33 15 V
-27 15 V
36 -23 V
6 21 V
0 35 V
35 28 V
15 -52 V
-7 23 V
20 25 V
-2 3 V
2 0 V
18 29 V
-3 -21 V
8 34 V
3 -21 V
42 -4 V
-13 -1 V
5 6 V
17 47 V
-6 8 V
27 -2 V
4 9 V
27 9 V
-23 -15 V
16 16 V
6 12 V
25 -14 V
8 19 V
21 20 V
-88 -70 V
4312 4012 L
9 15 V
10 7 V
-18 -7 V
30 1 V
0 -1 V
3 -13 V
28 47 V
1 -14 V
8 8 V
25 27 V
6 -40 V
-1 24 V
15 4 V
5 -10 V
-16 52 V
13 -16 V
34 -11 V
3 31 V
12 -3 V
15 6 V
-5 13 V
-8 -24 V
14 -5 V
5 -7 V
30 31 V
-34 1 V
34 36 V
8 -36 V
24 25 V
20 27 V
-17 -54 V
14 14 V
21 60 V
-25 -23 V
23 -10 V
0 2 V
11 -2 V
32 25 V
-24 -59 V
18 84 V
13 -35 V
13 4 V
-5 3 V
22 -5 V
-11 24 V
4 -12 V
27 2 V
14 39 V
14 -28 V
-3 15 V
28 23 V
5 -31 V
-6 0 V
-4 1 V
11 -6 V
4 37 V
3 -7 V
14 16 V
13 -23 V
3 2 V
-10 3 V
40 29 V
-11 -18 V
4 5 V
12 -3 V
24 18 V
-23 -30 V
17 23 V
12 -12 V
-13 -4 V
23 26 V
-10 13 V
13 -8 V
39 29 V
1 -13 V
-17 -17 V
26 12 V
4 19 V
28 -16 V
-54 3 V
72 -2 V
-28 4 V
17 -5 V
14 20 V
-16 -3 V
47 8 V
10 2 V
-5 -4 V
3 14 V
17 -11 V
44 13 V
-35 16 V
7 -13 V
23 -8 V
-13 20 V
1 21 V
7 -25 V
-1 10 V
28 -13 V
-77 -1 V
87 1 V
-10 -2 V
27 29 V
-14 -20 V
5134 4366 L
9 -5 V
-29 -15 V
49 45 V
-54 -44 V
63 9 V
25 33 V
-32 -16 V
26 8 V
13 13 V
-12 -32 V
-9 0 V
14 19 V
20 10 V
-3 3 V
1 7 V
20 -5 V
11 3 V
13 -13 V
-21 15 V
11 -16 V
28 39 V
8 -22 V
19 -2 V
-5 2 V
-15 12 V
26 -9 V
-7 -1 V
2 19 V
30 11 V
12 -47 V
-11 37 V
-5 -19 V
8 7 V
24 21 V
-7 -17 V
4 5 V
-1 6 V
21 7 V
11 -6 V
-24 0 V
26 -13 V
11 33 V
12 -27 V
1 15 V
-6 5 V
20 -12 V
2 8 V
3 -20 V
29 31 V
0 -20 V
10 20 V
-3 3 V
0 -17 V
16 10 V
16 9 V
15 0 V
-53 -5 V
43 -6 V
1 11 V
15 -6 V
-12 14 V
15 11 V
10 -19 V
0 8 V
16 1 V
1 -27 V
46 29 V
-33 -1 V
38 0 V
-17 -7 V
14 -1 V
17 9 V
-14 -9 V
-4 20 V
24 1 V
0 2 V
22 -11 V
-31 11 V
27 -30 V
-8 19 V
11 21 V
22 7 V
-7 -17 V
13 8 V
7 -8 V
27 16 V
0 -8 V
-7 10 V
11 9 V
26 -10 V
-17 -3 V
3 -10 V
5 14 V
49 -4 V
-97 -15 V
64 15 V
41 -7 V
-40 11 V
35 -9 V
4 21 V
-22 1 V
44 -23 V
-12 12 V
-6 -1 V
5796 4497 L
11 21 V
35 -10 V
-28 -7 V
34 6 V
10 -3 V
-24 8 V
11 -14 V
13 2 V
-6 14 V
11 -7 V
14 3 V
0 2 V
19 3 V
-16 -1 V
45 6 V
-1 2 V
-14 -20 V
23 4 V
-9 1 V
-8 5 V
1 16 V
14 0 V
11 -17 V
-12 3 V
33 15 V
-22 5 V
19 -5 V
22 0 V
15 -7 V
-41 0 V
34 8 V
7 -4 V
-6 -3 V
20 -2 V
7 17 V
25 -6 V
-5 -8 V
6 2 V
34 -4 V
-8 6 V
-24 -1 V
35 12 V
-11 -11 V
12 1 V
-16 -7 V
30 8 V
-18 8 V
34 -2 V
-10 -8 V
-13 -6 V
-8 8 V
47 5 V
5 3 V
17 13 V
-47 -19 V
33 11 V
4 -4 V
4 5 V
4 -12 V
13 1 V
-20 22 V
46 -9 V
-24 -7 V
40 -8 V
-23 19 V
27 -12 V
-22 14 V
24 -9 V
21 -10 V
-34 17 V
8 8 V
-4 -10 V
14 3 V
18 1 V
23 -3 V
-33 -1 V
28 4 V
-7 1 V
6 6 V
32 4 V
-23 3 V
stroke
LT1
LTb
6311 4347 M
(theory) Rshow
LT1
6395 4347 M
399 0 V
962 461 M
54 20 V
54 23 V
54 27 V
53 31 V
54 34 V
54 37 V
53 41 V
54 44 V
54 47 V
54 50 V
53 53 V
54 56 V
54 58 V
54 60 V
53 63 V
54 64 V
54 67 V
53 69 V
54 70 V
54 71 V
54 73 V
53 74 V
54 75 V
54 76 V
53 76 V
54 77 V
54 77 V
54 78 V
53 77 V
54 77 V
54 77 V
54 77 V
53 76 V
54 76 V
54 75 V
53 74 V
54 73 V
54 72 V
54 71 V
53 69 V
54 69 V
54 67 V
53 65 V
54 64 V
54 63 V
54 61 V
53 59 V
54 58 V
54 56 V
54 54 V
53 53 V
54 50 V
54 49 V
53 48 V
54 45 V
54 44 V
54 43 V
53 40 V
54 39 V
54 37 V
54 36 V
53 34 V
54 32 V
54 31 V
53 30 V
54 28 V
54 27 V
54 25 V
53 24 V
54 23 V
54 21 V
53 20 V
54 20 V
54 18 V
54 17 V
53 16 V
54 15 V
54 14 V
54 13 V
53 12 V
54 12 V
54 11 V
53 10 V
54 10 V
54 8 V
54 9 V
53 7 V
54 7 V
54 7 V
53 6 V
54 6 V
54 5 V
54 5 V
53 4 V
54 4 V
54 4 V
54 3 V
53 4 V
54 3 V
stroke
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
